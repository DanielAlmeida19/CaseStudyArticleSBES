version: '3.7'
services:
  integrador-zookeeper:
    container_name: integrador-zookeeper
    image: confluentinc/cp-zookeeper:7.6.1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - integradorweb-net

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - integrador-zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: integrador-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,OUTSIDE://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - integradorweb-net

  debezium:
    container_name: debezium
    image: debezium/connect:2.6.1.Final
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    networks:
      - integradorweb-net

  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postuser
      POSTGRES_PASSWORD: postpass
      POSTGRES_DB: MSCondominium
    command: ["postgres", "-c", "wal_level=logical"]
    networks:
      - integradorweb-net

  mariadb:
    hostname: mariadb
    container_name: mariadb
    image: mariadb:10.6.22-ubi9
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: MSReservation
      MYSQL_USER: mariadbuser
      MYSQL_PASSWORD: mariadbpass
    networks:
      - integradorweb-net

  mongodb:
    container_name: mongodb
    image: mongo:8.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: MSResident
    command: ["sh", "entrypoint.sh"]
    networks:
      - integradorweb-net
    volumes:
      - ./MongoConfig/mongo-keyfile:/data/configdb/mongo-keyfile
      - ./MongoConfig/MongoEntrypoint.sh:/entrypoint.sh
      - ./MongoConfig/mongod.conf:/etc/mongod.conf

  MSCondominium:
    container_name: MSCondominium
    image: casestudy-mscondominium
    build:
      context: .
      dockerfile: MSCondominium/Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: postuser
      POSTGRES_PASS: postpass
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: MSCondominium
    depends_on:
      - postgres
    networks:
      - integradorweb-net
    
  MSReservation:
    container_name: MSReservation
    image: casestudy-msreservation
    build:
      context: .
      dockerfile: MSReservation/Dockerfile
    ports:
      - "8082:8082"
    environment:
      MARIADB_HOST: mariadb
      MARIADB_DATABASE: MSReservation
      MARIADB_USER: mariadbuser
      MARIADB_PASS: mariadbpass
    depends_on:
      - mariadb
    networks:
      - integradorweb-net

  MSReplicator:
    container_name: MSReplicator
    image: casestudy-msreplicator
    build:
      context: .
      dockerfile: MSReplicator/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - debezium
      - kafka
      - mariadb
      - postgres
      - mongodb
      - MSCondominium
      - MSReservation
      - MSResident
    environment:
      MARIADB_HOST: mariadb
      POSTGRES_HOST: postgres
      KAFKA_HOST: kafka
    networks:
      - integradorweb-net

  MSResident:
    container_name: MSResident
    image: casestudy-msresident
    build:
      context: .
      dockerfile: MSResident/Dockerfile
    ports:
      - "8081:8081"
    environment:
      MONGO_USER: rootuser
      MONGO_PASSWORD: rootpass
      MONGO_HOST: mongodb
      MONGO_DATABASE: MSResident
    depends_on:
      - mongodb
    networks:
      - integradorweb-net

  APIGateway:
    container_name: APIGateway
    image: casestudy-apigateway
    build:
      context: .
      dockerfile: CaseStudyGateway/Dockerfile
    ports:
      - "8085:8085"
    environment:
      MSCONDOMINIUM_HOST: MSCondominium
      MSRESIDENT_HOST: MSResident
      MSRESERVATION_HOST: MSReservation
    depends_on:
      - MSCondominium
      - MSReservation
      - MSResident
    networks:
      - integradorweb-net

networks:
  integradorweb-net:
    driver: bridge
